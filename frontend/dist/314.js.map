{"version":3,"file":"314.js","mappings":"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","sources":["webpack://mq-navigator3.0client/./src/hooks/useInput.ts","webpack://mq-navigator3.0client/./src/pages/member/SignUp/index.tsx","webpack://mq-navigator3.0client/./src/pages/member/SignUp/styles.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useCallback, useState, ChangeEvent } from 'react';\n\ntype ReturnTypes<T> = [T, (e: ChangeEvent<HTMLInputElement>) => void, Dispatch<SetStateAction<T>>];\n\nconst useInput = <T>(initialData: T): ReturnTypes<T> => {\n  const [value, setValue] = useState(initialData);\n  const handler = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setValue(e.target.value as unknown as T);\n  }, []);\n  return [value, handler, setValue];\n};\n\nexport default useInput;\n","import useInput from '@hooks/useInput';\nimport { Button, Error, Form, Header, Input, Label, LinkContainer, Success } from '@pages/member/SignUp/styles';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Link, useLocation, useNavigate } from 'react-router-dom';\nimport useCustomMember from '@hooks/useCustomMember';\nimport { signup } from '@api/memberApi';\nimport { useDispatch } from 'react-redux';\nimport { loginStateAsync } from '@slices/memberSlice';\nimport { memberSliceState } from '@typings/db';\n\nconst SignUp = () => {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const { memberState } = useCustomMember();\n  const location = useLocation();\n  const { from } = location.state || { from: { pathname: '/workspace/mqnavigator' } };\n  const { updateUrlAfterLogin } = useCustomMember();\n\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput('');\n  const [password, , setPassword] = useInput('');\n  const [passwordCheck, , setPasswordCheck] = useInput('');\n\n  const [signUpError, setSignUpError] = useState(false);\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  const [mismatchError, setMismatchError] = useState(false);\n\n  const onChangePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n      setMismatchError(passwordCheck !== e.target.value);\n    },\n    [passwordCheck, setPassword],\n  );\n\n  const onChangePasswordCheck = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPasswordCheck(e.target.value);\n      setMismatchError(password !== e.target.value);\n    },\n    [password, setPasswordCheck],\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      if (!nickname || !nickname.trim()) {\n        return;\n      }\n      if (!mismatchError) {\n        setSignUpError(false);\n        setSignUpSuccess(false);\n        const singupParam = { email: email, nickname: nickname, password: password };\n        signup(singupParam)\n          .then((memberState) => {\n            console.log('signup memberState : ', memberState);\n            // login이 성공한 후에 updateSlicesAfterLogin 실행\n            const member = memberState as memberSliceState;\n            // @ts-ignore\n            dispatch(loginStateAsync(member))\n              .then((result: memberSliceState) => {\n                console.log('Login succeeded', result);\n                updateUrlAfterLogin().then();\n              })\n              .catch((error: any) => {\n                console.log('Login failed', error);\n              });\n          })\n          .catch((error) => {\n            console.log(error.response?.data);\n            setSignUpError(error.response?.data?.code === 403);\n          });\n      }\n    },\n    [dispatch, email, mismatchError, nickname, password, updateUrlAfterLogin],\n  );\n\n  useEffect(() => {\n    if (memberState.email) {\n      navigate(from.pathname, { replace: true });\n    }\n  }, [memberState.email, from.pathname, navigate]);\n\n  return (\n    <>\n      <Header>MQ-Navigator</Header>\n      <Form onSubmit={onSubmit}>\n        <Label id=\"email-label\">\n          <span>이메일 주소</span>\n          <div>\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\n          </div>\n        </Label>\n        <Label id=\"nickname-label\">\n          <span>닉네임</span>\n          <div>\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\n          </div>\n        </Label>\n        <Label id=\"password-label\">\n          <span>비밀번호</span>\n          <div>\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\n          </div>\n        </Label>\n        <Label id=\"password-check-label\">\n          <span>비밀번호 확인</span>\n          <div>\n            <Input\n              type=\"password\"\n              id=\"password-check\"\n              name=\"password-check\"\n              value={passwordCheck}\n              onChange={onChangePasswordCheck}\n            />\n          </div>\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\n          {signUpError && <Error>이미 가입된 이메일입니다.</Error>}\n          {signUpSuccess && <Success>회원가입되었습니다! 로그인해주세요.</Success>}\n        </Label>\n        <Button type=\"submit\">회원가입</Button>\n      </Form>\n      <LinkContainer>\n        이미 회원이신가요?&nbsp;\n        <Link to=\"/member/login\">로그인 하러가기</Link>\n      </LinkContainer>\n    </>\n  );\n};\n\nexport default SignUp;\n","import styled from '@emotion/styled';\n\nexport const Header = styled.header`\n  text-align: center;\n  font-family: Slack-Larsseit, Helvetica Neue, Helvetica, Segoe UI, Tahoma, Arial, sans-serif;\n  font-weight: 700;\n  font-size: 48px;\n  line-height: 46px;\n  letter-spacing: -0.75px;\n  margin-top: 50px;\n  margin-bottom: 50px;\n`;\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  width: 400px;\n  max-width: 400px;\n`;\n\nexport const Label = styled.label`\n  margin-bottom: 16px;\n\n  & > span {\n    display: block;\n    text-align: left;\n    padding-bottom: 8px;\n    font-size: 15px;\n    cursor: pointer;\n    line-height: 1.46666667;\n    font-weight: 700;\n  }\n`;\n\nexport const Input = styled.input`\n  border-radius: 4px;\n  --saf-0: rgba(var(--sk_foreground_high_solid, 134, 134, 134), 1);\n  border: 1px solid var(--saf-0);\n  transition: border 80ms ease-out, box-shadow 80ms ease-out;\n  box-sizing: border-box;\n  margin: 0 0 20px;\n  width: 100%;\n  color: rgba(var(--sk_primary_foreground, 29, 28, 29), 1);\n  background-color: rgba(var(--sk_primary_background, 255, 255, 255), 1);\n  padding: 12px;\n  height: 44px;\n  padding-top: 11px;\n  padding-bottom: 13px;\n  font-size: 18px;\n  line-height: 1.33333333;\n\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 12px;\n  width: 100%;\n  max-width: 100%;\n  color: #fff;\n  background: rgba(20, 10, 110);\n  border: none;\n  font-size: 18px;\n  font-weight: 900;\n  height: 44px;\n  min-width: 96px;\n  padding: 0 16px 3px;\n  transition: all 80ms linear;\n  user-select: none;\n  outline: none;\n  cursor: pointer;\n  border-radius: 4px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3);\n\n  &:hover {\n    background-color: rgba(50, 20, 160);\n    border: none;\n  }\n  &:focus {\n    --saf-0: rgba(var(--sk_highlight, 18, 100, 163), 1);\n    box-shadow: 0 0 0 1px var(--saf-0), 0 0 0 5px rgba(29, 155, 209, 0.3);\n  }\n`;\n\nexport const Error = styled.div`\n  color: #e01e5a;\n  margin: 8px 0 16px;\n  font-weight: bold;\n`;\n\nexport const Success = styled.div`\n  color: #2eb67d;\n  font-weight: bold;\n`;\n\nexport const LinkContainer = styled.p`\n  font-size: 13px;\n  color: #616061;\n  margin: 0 auto 8px;\n  width: 400px;\n  max-width: 400px;\n\n  & a {\n    color: #1264a3;\n    text-decoration: none;\n    font-weight: 700;\n\n    &:hover {\n      text-decoration: underline;\n    }\n  }\n`;\n"],"names":["initialData","_useState2","useState","value","setValue","useCallback","e","target","navigate","useNavigate","dispatch","useDispatch","memberState","useCustomMember","from","useLocation","state","pathname","updateUrlAfterLogin","_useInput2","_slicedToArray","useInput","email","onChangeEmail","_useInput4","nickname","onChangeNickname","_useInput6","password","setPassword","_useInput8","passwordCheck","setPasswordCheck","signUpError","setSignUpError","_useState4","signUpSuccess","setSignUpSuccess","_useState6","mismatchError","setMismatchError","onChangePassword","onChangePasswordCheck","onSubmit","preventDefault","trim","singupParam","signup","then","console","log","member","loginStateAsync","result","catch","error","_error$response","_error$response2","response","data","code","useEffect","replace","React","Header","Form","Label","id","Input","type","name","onChange","Error","Success","Button","LinkContainer","Link","to","styled","header","_templateObject","_taggedTemplateLiteral","form","_templateObject2","label","_templateObject3","input","_templateObject4","button","_templateObject5","div","_templateObject6","_templateObject7","p","_templateObject8"],"sourceRoot":""}